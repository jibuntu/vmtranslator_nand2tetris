// アセンブリコードのテスト
// cpuエミュレーターで実行する
// C命令に関しては102ページのCPUの実装案の図を見るとわかりやすい

// dest=comp
// destは結果の保存先
// compは計算内容
// compで直接整数を指定して保存することはできない

@3 // Aレジスタへ代入
D=A // Aレジスタの値をDレジスタへ代入

@0 // Aレジスタへ代入
M=D // Dレジスタにある数値をM[0]に保存（M[Aレジスタの値]）

// foo変数を定義
// 変数の番地は16番から始まる
@foo 
M=D // Dレジスタにある数値をM[foo]に保存


@9
D=A // 9をDレジスタへ代入

@foo
D=D+M // Dレジスタの値とM[foo]の値を足してDレジスタへ代入

@sum
M=D // sum変数(M[sum])へ計算結果を代入

@number
M=M+1 // number変数をインクリメントする
M=M+1
M=M+1

@minus
M=M-1 // minus変数をデクリメントする
M=M-1
M=M-1

// レジスタの値を番地として使う
// some番地に16と言う値が入っていれば16番地にアクセスする
// A=MとすることでMの値をAレジスタに入れることができる
@16
D=A
@some
M=D // som番地に16を代入
A=M // some番地の値をAレジスタに代入
D=M // some番地の値の番地の値をDレジスタに代入
@some2
M=D // some番地の値の番地の値をsome2番地に代入